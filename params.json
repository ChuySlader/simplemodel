{"name":"SimpleModel","tagline":"JS Class for a dinamic managment of the html data and the comunication with the server.","body":"### Welcome to SimpleModel Page!\r\nSimpleModel allows you to create and manage conections between the html data on your page and your server, SimpleModel create instances related to a predefined model which contains all the info and events related with the model, and let you manage the info and fields related with the instance.\r\n\r\nYou can create a new model as easy as:\r\n\r\n```javascript\r\nvar NewModel = new SimpleModel();\r\n```\r\n\r\nBut this wont make anything :( so lets create a usefull example:\r\n\r\n```javascript\r\nvar MyUserModel = new SimpleModel({\r\n    'url': '/YourUrlThatManageThisModel',\r\n    'type': 'IdentifierForThisModel',\r\n    'callbacks': {\r\n        'afterPublish': function (data, self) {\r\n            alert(\"Hey! You just published the instance: \"+self.id)\r\n        }\r\n    },\r\n    'handlers': {\r\n        'errorHandler': function (error, data) {\r\n            switch (error) {\r\n            case 'ERROR_ON_PUBLISH_RESPONSE':\r\n                (function (error) {\r\n                    alert(\"Woops something went wrong on the server: \" + error);\r\n                })(data);\r\n            }\r\n        }\r\n    },\r\n    'fields': {\r\n        'id': {\r\n            'default': ''\r\n        },\r\n        'username': {\r\n            'required': true\r\n        }\r\n    }\r\n});\r\n```\r\n\r\nAnd now lets create a new instance of the prev model:\r\n\r\n```javascript\r\nvar info = jQuery(\"#myInfoContainer\").find(\"model-data\");\r\nvar User = MyUserModel.create(info);\r\n```\r\nSo now every time you modify a html input the model will publish automatically the data to your server under \"/YourUrlThatManageThisModel/publish\".","google":"","note":"Don't delete this file! It's used internally to help with page regeneration."}